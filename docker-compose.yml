services:
  web:
    build:
      context: .
      dockerfile: Shopnetic.Web/Dockerfile
    ports:
      - "5000:80"
    depends_on:
      - postgres
      - kafka1
      - kafka2
      - kafka3
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - backend

  cart:
    build:
      context: .
      dockerfile: Shopnetic.Cart/Dockerfile
    ports:
      - "5001:80"
    depends_on:
      - postgres
      - kafka1
      - kafka2
      - kafka3
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - backend

  email:
    build:
      context: .
      dockerfile: Shopnetic.Emailer/Dockerfile
    ports:
      - "5002:80"
    depends_on:
      - postgres
      - kafka1
      - kafka2
      - kafka3
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - backend

  orders:
    build:
      context: .
      dockerfile: Shopnetic.Orders/Dockerfile
    ports:
      - "5003:80"
    depends_on:
      - postgres
      - kafka1
      - kafka2
      - kafka3
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - backend

  inventory:
    build:
      context: .
      dockerfile: Shopnetic.Inventory/Dockerfile
    ports:
      - "5004:80"
    depends_on:
      - postgres
      - kafka1
      - kafka2
      - kafka3
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - backend

  payments:
    build:
      context: .
      dockerfile: Shopnetic.Payments/Dockerfile
    ports:
      - "5005:80"
    depends_on:
      - postgres
      - kafka1
      - kafka2
      - kafka3
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - backend

  shipping:
    build:
      context: .
      dockerfile: Shopnetic.Shipping/Dockerfile
    ports:
      - "5006:80"
    depends_on:
      - postgres
      - kafka1
      - kafka2
      - kafka3
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - backend

  postgres:
    image: postgres:15
    container_name: postgres
    hostname: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka1:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka1
    hostname: kafka1
    ports:
      - "8097:8097"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:8097,INTERNAL://kafka1:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL

  kafka2:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka2
    hostname: kafka2
    ports:
      - "8098:8098"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:8098,INTERNAL://kafka2:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL

  kafka3:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka3
    hostname: kafka3
    ports:
      - "8099:8099"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:8099,INTERNAL://kafka3:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL

volumes:
  pgdata:

networks:
  backend:
